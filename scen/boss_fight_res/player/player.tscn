[gd_scene load_steps=6 format=3 uid="uid://gfoaq5m2q5s4"]

[ext_resource type="PackedScene" uid="uid://bxjsoq0lxn626" path="res://scens/player/gun/bullet.tscn" id="1_ohiav"]
[ext_resource type="Texture2D" uid="uid://bodrsg2cvdb2r" path="res://assets/player.png" id="2_jfi6h"]

[sub_resource type="GDScript" id="GDScript_m6h67"]
script/source = "extends CharacterBody2D
var pushback = 100
var dashspeed = 400
var dashing = false
const JUMP_VELOCITY = -400.0
var can_dash = true
var speed = 100
signal  health_dep
@export var bullet_node = preload(\"res://scens/bullet.tscn\")
var gravity = ProjectSettings.get_setting(\"physics/2d/default_gravity\")
var jump_count
var plat_vel = Vector2.ZERO
var max_jump = 2
var max_dash = 2
var dash_count
const jump_vel = -250
const DMG_RATE =50
@onready var hurt = $hurt
@onready var progress_bar = $ProgressBar





var direction :  Vector2
var health: = 100:
	set(value):
		health = value
		progress_bar.value = value
		if value <=0:
			progress_bar.visible = false


func _physics_process(delta):





	if Input.is_action_just_pressed(\"dash\") and can_dash:
		
		dashing = true
		can_dash = false
		$dash_timer.start()

	if not is_on_floor():
		velocity.y += gravity*delta
		
	if is_on_floor():
		jump_count = 0
		
	
	if Input.is_action_just_pressed(\"jump\") and jump_count<max_jump:
		velocity.y = jump_vel
		jump_count += 1
	if is_on_wall() and Input.is_action_just_pressed(\"right\"):
		velocity.y=jump_vel
		velocity.x = -pushback
	if is_on_wall() and Input.is_action_just_pressed(\"left\"):
		velocity.y=jump_vel
		velocity.x = pushback
	
		
		
		
	var direction = Input.get_axis(\"left\",\"right\")
	if direction:
		if dashing:
			velocity.x = direction * dashspeed
		else:
			velocity.x = direction * speed
	else:
		velocity.x = move_toward(velocity.x, 0, speed)

	move_and_slide()
	move_and_slide() 
	plat_vel = get_platform_velocity()
func _on_dash_timer_timeout():
	dashing =false

func _on_dashagain_timeout():
	can_dash = true


func _on_dash_wait_timeout():
	can_dash = true

func shoot():
	var bullet = bullet_node.instantiate()
 
	bullet.position = global_position
	bullet.direction = (get_global_mouse_position() - global_position).normalized()
	get_tree().current_scene.call_deferred(\"add_child\",bullet)
func _input(event):
	if event.is_action(\"shoot\"):
		shoot()

func _on_hurt_body_entered(body):
	health -= 20
	print(health)
func take_dmg():
	health -= 10
"

[sub_resource type="RectangleShape2D" id="RectangleShape2D_16xdc"]
size = Vector2(22, 24)

[sub_resource type="CircleShape2D" id="CircleShape2D_avxep"]
radius = 11.0

[node name="player" type="CharacterBody2D" groups=["player"]]
texture_filter = 1
collision_layer = 8
collision_mask = 5
script = SubResource("GDScript_m6h67")
bullet_node = ExtResource("1_ohiav")

[node name="Player" type="Sprite2D" parent="."]
scale = Vector2(0.3, 0.3)
texture = ExtResource("2_jfi6h")

[node name="dash_timer" type="Timer" parent="."]
wait_time = 0.2
one_shot = true

[node name="dashagain" type="Timer" parent="."]
autostart = true

[node name="CollisionShape2D2" type="CollisionShape2D" parent="."]
shape = SubResource("RectangleShape2D_16xdc")

[node name="hurt" type="Area2D" parent="."]
collision_layer = 0
collision_mask = 2

[node name="CollisionShape2D" type="CollisionShape2D" parent="hurt"]
shape = SubResource("CircleShape2D_avxep")

[node name="ProgressBar" type="ProgressBar" parent="."]
unique_name_in_owner = true
offset_left = -48.0
offset_top = 18.0
offset_right = 46.0
offset_bottom = 45.0
value = 100.0
rounded = true

[connection signal="timeout" from="dash_timer" to="." method="_on_dash_timer_timeout"]
[connection signal="timeout" from="dashagain" to="." method="_on_dashagain_timeout"]
[connection signal="body_entered" from="hurt" to="." method="_on_hurt_body_entered"]
